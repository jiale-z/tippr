type ServerBio {
  bio: String
  picture: String
}

type Restaurant @model @auth(rules: [{allow: public}]) {
  id: ID!
  menu: String
  user: User! @connection
  servers: [Server] @connection(keyName: "byRestaurant", fields: ["id"])
  title: String
  restaurantCode: String
}

type Server @model @auth(rules: [{allow: public}]) @key(name: "byRestaurant", fields: ["restaurantID"]) {
  id: ID!
  user: User! @connection
  restaurantID: ID
  bio: ServerBio
}

type Allergens {
  milk: Boolean
  eggs: Boolean
  fish: Boolean
  shellfish: Boolean
  treeNuts: Boolean
  peanuts: Boolean
  wheat: Boolean
  soy: Boolean
  sesame: Boolean
}

type Customer @model @auth(rules: [{allow: public}]) @key(name: "byRestaurant", fields: ["restaurantID"]) {
  id: ID!
  communicationPreference: Int
  allergens: Allergens
  restaurantID: ID
  user: User! @connection
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  email: String!
}
 